{"version":3,"sources":["assets/styles/views/pageStyle.tsx","assets/theme/palette.js","assets/theme/typography.js","assets/theme/index.js","assets/styles/components/loadingBarStyle.tsx","components/LoadingAnimation.tsx","assets/styles/components/nominationListStyle.tsx","assets/styles/components/nominationListItemStyle.tsx","components/NominationListItem.tsx","components/NominationList.tsx","assets/styles/components/nominationSubmissionStyle.tsx","services/constants.ts","services/Email.ts","services/Nominations.ts","services/serializers.ts","services/OMDB.ts","services/index.ts","services/MovieServer.ts","components/NominationSubmission.tsx","assets/styles/components/searchBarStyle.tsx","components/SearchBar.tsx","assets/styles/components/searchResultsStyle.tsx","assets/styles/components/searchResultsCarouselStyle.tsx","assets/styles/components/fullScreenStyle.tsx","components/FullScreenView.tsx","components/SearchResultsCarousel.tsx","components/SearchResults.tsx","components/Snackbar.tsx","assets/styles/components/nominationRankingsStyle.tsx","assets/styles/components/nominatedMovieItemStyle.tsx","components/NominatedMovieItem.tsx","components/NominationRankings.tsx","views/SearchPage.tsx","App.tsx","index.tsx"],"names":["usePageStyles","makeStyles","theme","createStyles","mainPanel","index","white","common","black","primary","contrastText","dark","colors","red","main","light","secondary","green","text","grey","background","default","paper","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","createMuiTheme","typography","direction","useStyles","loadingProgress","alignItems","justifyContent","zIndex","LoadingAnimation","classes","progressStyle","Box","paddingLeft","paddingTop","CircularProgress","className","NominationListStyle","searchPaper","height","display","overflowY","overflowX","flexDirection","boxShadow","elevation","backgroundColor","marginRight","marginTop","boxStyle","marginLeft","marginBottom","title","submitButton","position","left","top","nominationBox","fullText","right","noneSelectedText","margin","fontStyle","body","icon","width","annotationList","maxHeight","overflow","secondaryText","textOverflow","NominationListItem","nominatedMovie","setNominationList","useNominationListItemStyle","ListItem","style","ListItemAvatar","MovieCreation","src","poster","alt","ListItemText","Typography","component","year","genre","imdbRating","director","Button","onClick","prevState","oldNominationList","Array","from","newNominationList","Set","i","length","id","add","React","memo","NominationList","nominationList","setSubmissionDialogOpen","useNominationListStyle","nominatedMovies","useMemo","map","movie","Paper","whiteSpace","disabled","size","List","NominationSubmissionStyle","dialogBox","textField","button","buttonBox","submitText","ENDPOINTS","OMDBSEARCH","process","OMDBSEARCHMOVIEINFO","NOMINATIONSUBMISSION","USERSTORE","CHECKUSER","RANKINGS","EMAIL","SWRKeys","EmailService","apiInstance","this","email","endpoint","post","recipient","resp","data","NominationService","moviesObj","rating","get","OMDBService","filterOptions","queryString","Object","entries","parameter","value","join","movieObj","Poster","Title","Genre","Director","Year","plot","Plot","imdbID","movieServer","movieSearchService","nominationService","emailService","axios","create","timeout","NominationSubmission","setSnackbarMessage","useNominationSubmissionStyle","useState","setEmail","emailBody","forEach","submitNomination","useCallback","a","checkUserExists","Promise","all","sendEmail","console","log","m","TextField","autoFocus","required","multiline","label","variant","onChange","e","target","startIcon","Close","Save","test","validateEmail","SearchBarStyle","searchButton","SearchBar","setSearchResultDisplay","setSearchedMoviesInfo","searchedMoviesInfo","setNoResults","searchString","setSearchString","searchYear","setSearchYear","useSearchBarStyle","handleSearch","listOfWords","split","splice","replace","pop","searchMovies","s","y","newSearchResults","Response","Search","getMovieInfo","movieInfo","useEffect","handleEnter","key","window","addEventListener","removeEventListener","matches","match","autoComplete","InputProps","startAdornment","InputAdornment","SearchResultsStyle","formControl","minWidth","searchResultText","resultText","noMatchText","filmText","props","isFullscreen","fontFamily","filmInfo","maxWidth","textAlign","border","borderColor","padding","filmPlot","leftClick","bottom","transform","rightClick","backArrow","gridListFullScreen","flexWrap","gridList","images","imagesFullScreen","largeImageView","objectFit","largeImageViewFullScreen","card","fullScreen","titleBar","opacity","preview","borderStyle","previewSelected","appBar","spacing","flex","TransitionComponent","forwardRef","ref","Slide","FullScreenView","children","isOpen","setIsOpen","useFullScreenStyle","Dialog","open","onClose","AppBar","Toolbar","IconButton","edge","aria-label","SearchResultsCarousel","SelectDirection","selectedIndex","setSelectedIndex","setIsFullscreen","useSearchResultsCarouselStyle","handleTraverseImages","Right","prev","Left","isNominated","movieId","searchResultsView","ArrowBackIos","ArrowForwardIos","GridList","cols","innerWidth","innerHeight","cellHeight","GridListTile","GridListTileBar","titlePosition","actionIcon","addedMovies","Star","StarBorder","actionPosition","Fullscreen","SearchResults","searchResultDisplay","noResult","useSearchResultsStyle","float","FormControl","SnackbarMessage","message","Snackbar","textAnchor","anchorOrigin","vertical","horizontal","Boolean","action","autoHideDuration","media","rank","borderRadius","image","NominatedMovieItem","useNominatedMovieItemStyle","Icon","LooksOne","LooksTwo","Looks3","Looks4","Looks5","in","getColor","count","NominationRankings","useNominationRankingsStyle","useSWR","getRankings","rankings","isLoading","isValidating","error","topMovies","SearchPage","submissionDialogOpen","snackbarMessage","nominationRankingsOpen","setNominationRankingsOpen","handleKeyPress","Grid","container","item","xs","md","borderWidth","App","ThemeProvider","CssBaseline","fallback","exact","path","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAYeA,EAFOC,aAAW,SAACC,GAAD,OAPxBC,YAAa,CAClBC,UAAW,OAM+C,CAAEC,MAAO,I,kCCRjEC,EAAQ,UAIC,GACbC,OAAQ,CAAEC,MAJE,UAIKF,SACjBG,QAAS,CACPC,aAAcJ,EACdK,KAAMC,IAAOC,IAAI,KACjBC,KAAMF,IAAOC,IAAI,KACjBE,MAAOH,IAAOC,IAAI,MAEpBG,UAAU,CACRN,aAAcJ,EACdK,KAAMC,IAAOK,MAAM,KACnBH,KAAMF,IAAOK,MAAM,KACnBF,MAAOH,IAAOK,MAAM,MAEtBC,KAAM,CACJT,QAASG,IAAOO,KAAK,KACrBH,UAAWJ,IAAOO,KAAK,MAEzBC,WAAY,CACVC,QAAS,UACTC,MAAOhB,ICvBI,GACbiB,GAAI,CACFC,MAAOC,EAAQP,KAAKT,QACpBiB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdC,GAAI,CACFN,MAAOC,EAAQP,KAAKT,QACpBiB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdE,GAAI,CACFP,MAAOC,EAAQP,KAAKT,QACpBiB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdG,GAAI,CACFR,MAAOC,EAAQP,KAAKT,QACpBiB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,SCpBD3B,EAND+B,YAAe,CAC3BR,UACAS,aACAC,UAAW,QCEEC,EAPGnC,YAAW,CAC3BoC,gBAAiB,CACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,M,kBCMGC,MARf,WACE,IAAMC,EAAUC,IAChB,OACE,cAACC,EAAA,EAAD,CAAKC,YAAY,MAAMC,WAAW,KAAlC,SACE,cAACC,EAAA,EAAD,CAAkBvB,MAAM,UAAUwB,UAAWN,EAAQL,qB,4DCmD5CY,EAxDahD,aAAW,kBACrCE,YAAa,CACX+C,YAAa,CACXC,OAAQ,OACRC,QAAS,OACTC,UAAW,OACXC,UAAW,SACXC,cAAe,SACf5B,SAAU,QACV6B,UAAW,IACXC,UAAW,EACXC,gBAAiB,QACjBC,YAAa,KACbC,UAAW,MAEbC,SAAU,CACRT,QAAS,OACTb,eAAgB,SAChBuB,WAAY,OACZH,YAAa,OACbC,UAAW,KACXG,aAAc,MAEhBC,MAAO,CACLxC,MAAOtB,EAAMuB,QAAQhB,QAAQE,KAC7BgB,SAAUzB,EAAMgC,WAAWX,GAAGI,UAEhCsC,aAAc,CACZC,SAAU,WACVC,KAAM,GACNC,IAAK,EACLhD,WAAY,UACZ,UAAW,CACTA,WAAY,YAGhBiD,cAAe,CACbjB,QAAS,cACTb,eAAgB,gBAChBD,WAAY,UAEdgC,SAAU,CACRJ,SAAU,WACV1C,MAAO,MACP+C,MAAO,GACPH,IAAK,GAEPI,iBAAkB,CAChBC,OAAQ,KACR9C,SAAUzB,EAAMgC,WAAWJ,GAAGH,SAC9B+C,UAAW,SACXZ,WAAY,Y,oCC5BH1B,EAxBGnC,YAAW,CAC3B+D,MAAO,CACLrC,SAAU,GACVkB,YAAa,IAEf8B,KAAM,CACJhD,SAAU,IAEZiD,KAAM,CACJC,MAAO,GACP1B,OAAQ,GACR3B,MAAO,SAETsD,eAAgB,CACdC,UAAW,OACXC,SAAU,QAEZC,cAAe,CACbtD,SAAU,GACVqD,SAAU,SACVE,aAAc,cCTZC,EAAqB,SAAC,GAQrB,IAPLC,EAOI,EAPJA,eACAC,EAMI,EANJA,kBAOM3C,EAAU4C,IAEhB,OACE,eAACC,EAAA,EAAD,CAEEC,MAAO,CAAEpE,WAAY,UAAW2C,aAAc,MAFhD,UAIE,cAAC0B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,qBACEC,IAAKP,EAAeQ,OACpBJ,MAAO,CAAErC,OAAQ,OAAQQ,YAAa,MACtCkC,IAAI,KAEN,cAACC,EAAA,EAAD,CACErF,QAAS2E,EAAepB,MACxBhD,UACE,eAAC4B,EAAA,EAAD,CACE4C,MAAO,CACLX,MAAO,QAFX,UAKE,cAACkB,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,SAAWG,EAAea,OAE7B,uBACA,cAACF,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,UAAYG,EAAec,QAE9B,uBACA,cAACH,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,gBAAkBG,EAAee,aAEpC,uBACA,cAACJ,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,aAAeG,EAAegB,gBAKvC,cAACC,EAAA,EAAD,CACEb,MAAO,CAAErC,OAAQ,QACjBmD,QAAS,WACPjB,GAAkB,SAACkB,GAGjB,IAFA,IAAMC,EAAoBC,MAAMC,KAAKH,GACjCI,EAAoB,IAAIC,IACnBC,EAAI,EAAGA,EAAIL,EAAkBM,OAAQD,IACxCL,EAAkBK,GAAGE,KAAO3B,EAAe2B,IAC7CJ,EAAkBK,IAAIR,EAAkBK,IAG5C,OAAOF,MAXb,sBArCKvB,EAAe2B,KA0DXE,MAAMC,KAAK/B,GClBXgC,EA5DQ,SAAC,GAYjB,IAXLC,EAWI,EAXJA,eACA/B,EAUI,EAVJA,kBACAgC,EASI,EATJA,wBAUM3E,EAAU4E,IACVC,EAAkBC,mBACtB,kBACEf,MAAMC,KAAKU,GAAgBK,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CACEtC,eAAgBsC,EAChBrC,kBAAmBA,SAGzB,CAAC+B,EAAgB/B,IAEnB,OACE,eAACsC,EAAA,EAAD,CAAO3E,UAAWN,EAAQQ,YAA1B,UACE,eAACN,EAAA,EAAD,CAAKI,UAAWN,EAAQ2B,cAAxB,UACE,cAACzB,EAAA,EAAD,CAAK4C,MAAO,CAAEtB,SAAU,WAAY0D,WAAY,UAAhD,SACE,cAACvB,EAAA,EAAD,CACErD,UAAWN,EAAQuB,aACnBqC,QAAS,kBAAMe,GAAwB,SAACd,GAAD,OAAgBA,MACvDf,MAAO,CAAEtB,SAAU,YACnB2D,SAAkC,IAAxBT,EAAeU,KAJ3B,kCAUF,cAAClF,EAAA,EAAD,CAAKI,UAAWN,EAAQmB,SAAxB,SACE,cAACkC,EAAA,EAAD,CAAY/C,UAAWN,EAAQsB,MAA/B,+BAEF,cAACpB,EAAA,EAAD,CAAK4C,MAAO,CAAEtB,SAAU,WAAY0D,WAAY,UAAhD,SACE,cAAC7B,EAAA,EAAD,CAAY/C,UAAWN,EAAQ4B,SAA/B,SAC2B,IAAxB8C,EAAeU,KACZ,wBACA,gCAIkB,IAA3BP,EAAgBT,OACf,cAACf,EAAA,EAAD,CAAY/C,UAAWN,EAAQ8B,iBAA/B,oCAIA,cAACuD,EAAA,EAAD,UAAOR,Q,oDC/BAS,EA3BmB/H,aAAW,SAACC,GAAD,OAC3CC,YAAa,CACX8H,UAAW,CACT3E,UAAW,SACXD,UAAW,QAEb6E,UAAW,CACTtE,UAAW,KACXE,WAAY,MACZH,YAAa,MACbI,aAAc,KACdc,MAAO,OAETsD,OAAQ,CACN1D,OAAQ,IAEV2D,UAAW,CACTtE,WAAY,IAEduE,WAAY,CACVjF,QAAS,OACTb,eAAgB,SAChBqB,UAAW,W,kCCxBJ0E,EAAY,CACvBC,WAAW,mCAAD,OAAqCC,YAC/CC,oBAAoB,8CAAD,OAAgDD,YACnEE,qBAAsB,mDACtBC,UAAW,kDACXC,UAAW,wDACXC,SAAU,mDACVC,MAAO,gDAGIC,EACD,WCPCC,GAAb,WAGE,cAA8D,IAAhDC,EAA+C,EAA/CA,YAA+C,yBAFrDA,iBAEqD,EAC3DC,KAAKD,YAAcA,EAJvB,+FAOkBE,GAPlB,gFAQUC,EARV,UAQwBd,EAAUQ,OARlC,SASuBI,KAAKD,YAAYI,KAAKD,EAAU,CACjDzE,KAAMwE,EAAMxE,KACZ2E,UAAWH,EAAMG,YAXvB,cASUC,EATV,yBAaWA,EAAKC,MAbhB,8GCEO,IAAMC,GAAb,WAGE,cAA8D,IAAhDR,EAA+C,EAA/CA,YAA+C,yBAFrDA,iBAEqD,EAC3DC,KAAKD,YAAcA,EAJvB,sGAOyBvB,GAPzB,kFAQU8B,ECXD,CACLzC,IAFgC2C,EDYChC,GCVnBX,GACd/C,MAAO0F,EAAU1F,MACjBiC,KAAMyD,EAAUzD,KAChBC,MAAOwD,EAAUxD,MACjBE,SAAUsD,EAAUtD,SACpBuD,OAAQD,EAAUvD,WAClBP,OAAQ8D,EAAU9D,QDKZwD,EATV,UASwBd,EAAUI,sBATlC,SAUuBQ,KAAKD,YAAYI,KAAKD,EAAUI,GAVvD,cAUUD,EAVV,yBAWWA,EAAKC,MAXhB,iCCJO,IAA6BE,IDIpC,kJAcwBP,GAdxB,gFAeUC,EAfV,UAewBd,EAAUM,WAflC,SAgBuBM,KAAKD,YAAYI,KAAKD,EAAU,CAAED,MAAOA,IAhBhE,cAgBUI,EAhBV,yBAiBWA,GAjBX,gLAoBkBJ,GApBlB,gFAqBUC,EArBV,UAqBwBd,EAAUK,WArBlC,SAsBuBO,KAAKD,YAAYI,KAAKD,EAAU,CAAED,MAAOA,IAtBhE,cAsBUI,EAtBV,yBAuBWA,EAAKC,MAvBhB,oQA2BUJ,EA3BV,UA2BwBd,EAAUO,UA3BlC,SA4BuBK,KAAKD,YAAYW,IAAIR,GA5B5C,cA4BUG,EA5BV,yBA6BWA,EAAKC,MA7BhB,6GEGaK,GAAb,WAGE,cAA8D,IAAhDZ,EAA+C,EAA/CA,YAA+C,yBAFrDA,iBAEqD,EAC3DC,KAAKD,YAAcA,EAJvB,kGAOqBa,GAPrB,kFAQQC,EAAc,IAClBA,GAAeC,OAAOC,QAAQH,GAC3BrC,KAAI,mCAAEyC,EAAF,KAAaC,EAAb,YAAyBA,EAAK,UAAMD,EAAN,YAAmBC,GAAU,MAC/DC,KAAK,KACFhB,EAZV,UAYwBd,EAAUC,YAZlC,OAY+CwB,GAZ/C,SAauBb,KAAKD,YAAYW,IAAIR,GAb5C,cAaUG,EAbV,yBAcWA,EAAKC,MAdhB,mLAiBqBM,GAjBrB,gFAkBUV,EAlBV,UAkBwBd,EAAUG,oBAlBlC,cAkB2DqB,EAAcjD,GAlBzE,SAmBuBqC,KAAKD,YAAYW,IAAIR,GAnB5C,cAmBUG,EAnBV,yBDUS,CACL3D,QAFiCyE,ECWLd,GDTXC,KAAKc,OACtBtG,MAAOqG,EAASb,KAAKe,MACrBrE,MAAOmE,EAASb,KAAKgB,MACrBpE,SAAUiE,EAASb,KAAKiB,SACxBxE,KAAMoE,EAASb,KAAKkB,KACpBvE,WAAYkE,EAASb,KAAKrD,WAC1BwE,KAAMN,EAASb,KAAKoB,KACpB7D,GAAIsD,EAASb,KAAKqB,SClBtB,iCDSO,IAA8BR,ICTrC,0ECPMS,GAAc,ICclB,aAAe,yBAJNC,wBAIK,OAHLC,uBAGK,OAFLC,kBAEK,EACZ,IAAMhC,EAAciC,IAAMC,OAAO,CAAEC,QAAS,MAE5ClC,KAAK6B,mBAAqB,IAAIlB,GAAY,CAAEZ,gBAC5CC,KAAK8B,kBAAoB,IAAIvB,GAAkB,CAAER,gBACjDC,KAAK+B,aAAe,IAAIjC,GAAa,CAAEC,iBC6F5BoC,GA3Gc,SAAC,GAYvB,IAXLjE,EAWI,EAXJA,eACAC,EAUI,EAVJA,wBACAiE,EASI,EATJA,mBAUM5I,EAAU6I,IADZ,EAEsBC,mBAAS,IAF/B,mBAEGrC,EAFH,KAEUsC,EAFV,KAQEC,EAAY,SAACtE,GACjB,IAAIzC,EAAO,GAIX,OAHA8B,MAAMC,KAAKU,GAAgBuE,SAAQ,SAACjE,GAClC/C,GAAI,UAAO+C,EAAM1D,MAAb,aAAuB0D,EAAMzB,KAA7B,aAAsCyB,EAAMxB,MAA5C,aAAsDwB,EAAMtB,SAA5D,aAAyEsB,EAAMvB,WAA/E,aAECxB,GAGHiH,EAAmBC,sBAAW,sBAAC,sBAAAC,EAAA,+EAERhB,GAAYE,kBAAkBe,gBACrD5C,GAH+B,WAKT,IALS,OAKlBK,KALkB,gBAM/B8B,EACE,2DAP6B,wCAWzBU,QAAQC,IACZxF,MAAMC,KAAKU,GAAgBK,IAA3B,uCAA+B,WAAOC,GAAP,SAAAoE,EAAA,sEACvBhB,GAAYE,kBAAkBY,iBAAiBlE,GADxB,2CAA/B,wDAZ6B,eAgB/B4D,EAAmB,uCACnBjE,GAAwB,GAjBO,oBAmBvByD,GAAYG,aAAaiB,UAAU,CACvCvH,KAAM+G,EAAUtE,GAChBkC,UAAWH,IArBgB,2DAwB7BgD,QAAQC,IAAR,MAxB6B,0DA4BjCd,EAAmB,mDA5Bc,kEA8BlC,CAACnC,EAAO/B,EAAgBkE,EAAoBjE,IAE/C,OACE,eAACzE,EAAA,EAAD,CAAKyJ,EAAG,EAAGxH,MAAO,IAAK1B,OAAQ,IAAKH,UAAWN,EAAQuF,UAAvD,UACE,cAAClC,EAAA,EAAD,CAAY/C,UAAWN,EAAQ2F,WAA/B,gCACA,cAACiE,EAAA,EAAD,CACEC,WAAS,EACTvJ,UAAWN,EAAQwF,UACnBsE,UAAQ,EACRC,WAAS,EACT1F,GAAG,WACH2F,MAAM,QACNC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAO3C,UAErC,eAACvH,EAAA,EAAD,CAAKI,UAAWN,EAAQ0F,UAAxB,UACE,cAAC/B,EAAA,EAAD,CACErD,UAAWN,EAAQyF,OACnBL,KAAM,QACN6E,QAAQ,YACRnL,MAAM,UACNuL,UAAW,cAACC,EAAA,EAAD,IACX1G,QAAS,SAACuG,GACRxF,GAAwB,IAP5B,oBAYA,cAAChB,EAAA,EAAD,CACErD,UAAWN,EAAQyF,OACnBL,KAAM,QACN6E,QAAQ,YACRnL,MAAM,YACNuL,UAAW,cAACE,EAAA,EAAD,IACX3G,QAAS,YA5EK,SAAC6C,GACrB,MAAO,6BAA6B+D,KAAK/D,GA4E7BgE,CAAchE,GAGhBmC,EAAmB,+BAFnBM,KARN,2B,8BC/DOwB,GA5BQnN,aAAW,kBAChCE,YAAa,CACX+C,YAAa,CACXE,QAAS,OACT4B,SAAU,SACVzB,cAAe,SACf5B,SAAU,QACV6B,UAAW,IACXC,UAAW,EACXC,gBAAiB,QACjBI,WAAY,KACZH,YAAa,KACbC,UAAW,MAEbsE,UAAW,CACTzD,OAAQ,GACRI,MAAO,QAETwI,aAAc,CACZnJ,SAAU,WACVd,QAAS,OACTG,cAAe,SACfhB,eAAgB,SAChBD,WAAY,eCmHHgL,GA9HG,SAAC,GAgBZ,IAfLC,EAeI,EAfJA,uBAEAC,GAaI,EAdJC,mBAcI,EAbJD,uBACAE,EAYI,EAZJA,aAYI,EACoClC,mBAAS,IAD7C,mBACGmC,EADH,KACiBC,EADjB,OAEgCpC,mBAAS,IAFzC,mBAEGqC,EAFH,KAEeC,EAFf,KAGEpL,EAAUqL,KAEVC,EAAenC,sBAAW,sBAAC,gCAAAC,EAAA,sDAI7B,IAJ6B,SAE7B0B,EAAsB,IAClBS,EAAcN,EAAaO,MAAM,KAC5BrH,EAAI,EAAGA,EAAIoH,EAAYnH,OAAQD,IAClCoH,EAAYpH,KAAZ,WAAuBgH,EAAvB,KACFI,EAAYE,OAAOtH,EAAG,GAEtBoH,EAAYpH,GAAKoH,EAAYpH,GAC1BuH,QADc,WACFP,EADE,KACa,IAC3BO,QAAQ,iBAAkB,IAVJ,MAae,KAAxCH,EAAYA,EAAYnH,OAAS,IACnCmH,EAAYI,MAde,SAiBAvD,GAAYC,mBAAmBuD,aAC3C,KAAfT,EACI,CACEU,EAAGN,EAAY7D,KAAK,KACpBoE,EAAGX,GAEL,CAAEU,EAAGZ,IAvBkB,aAyBK,WAR9Bc,EAjByB,QAyBRC,SACnBhB,GAAa,IAEbe,EAAuCA,ENhD5BE,OAAOlH,KAAI,SAACC,GAAD,OAAgBA,EAAMmD,UMiD5C6C,GAAa,IA7Bc,UA+BvB1B,QAAQC,IACZwC,EAAiBhH,IAAjB,uCAAqB,WAAOV,GAAP,eAAA+E,EAAA,sEACKhB,GAAYC,mBAAmB6D,aAAa,CAClE/H,EAAGE,IAFc,OACb8H,EADa,OAInBrB,GAAsB,SAACjH,GAAD,6BAAmBA,GAAnB,CAA8BsI,OAJjC,2CAArB,wDAhC2B,mFAyC7BtB,EAAuBI,GACvBC,EAAgB,IAChBE,EAAc,IA3Ce,6EA6C9B,CACDH,EACAE,EACAN,EACAC,EACAE,IAmBF,OAhBAoB,qBAAU,WACR,IAAMC,EAAc,SAAClC,GACL,UAAVA,EAAEmC,KAAoC,KAAjBrB,GACvBK,KAIJ,OADAiB,OAAOC,iBAAiB,QAASH,GAC1B,kBAAME,OAAOE,oBAAoB,QAASJ,MAChD,CAACf,EAAcL,IAElBmB,qBAAU,WACR,IACMM,EAAUzB,EAAa0B,MADd,eAEfvB,EAAcsB,EAAUA,EAAQ,GAAK,MACpC,CAACzB,EAAcE,IAGhB,cAAClG,EAAA,EAAD,CAAO3E,UAAWN,EAAQQ,YAA1B,SACE,eAACN,EAAA,EAAD,CAAK4C,MAAO,CAAEpC,QAAS,OAAQb,eAAgB,gBAA/C,UACE,cAAC+J,EAAA,EAAD,CACEC,WAAS,EACT+C,aAAa,MACbtM,UAAWN,EAAQwF,UACnBnB,GAAG,aACH2F,MAAM,8CACNvC,MAAOwD,EACPhB,QAAQ,WACR4C,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBvL,SAAS,QAAzB,SACE,cAACwB,EAAA,EAAD,OAINkH,SAAU,SAACC,GACTe,EAAgBf,EAAEC,OAAO3C,UAG7B,cAAC9D,EAAA,EAAD,CACEC,QAAS,WACP0H,KAEFhL,UAAWN,EAAQ2K,aACnBxF,SAA2B,KAAjB8F,EALZ,SAOE,cAACgB,GAAA,EAAD,Y,UC1FKe,GAxCYzP,aAAW,kBACpCE,YAAa,CACX+C,YAAa,CACXE,QAAS,OACTC,UAAW,OACXE,cAAe,SACf5B,SAAU,QACV6B,UAAW,IACXC,UAAW,EACXC,gBAAiB,QACjBI,WAAY,KACZH,YAAa,KACbC,UAAW,MAEb+L,YAAa,CACXC,SAAU,IACVnL,OAAQ,IAEVoL,iBAAkB,CAChBnL,UAAW,SACX/C,SAAUzB,EAAMgC,WAAWX,GAAGI,SAC9ByB,QAAS,eACT5B,MAAOtB,EAAMuB,QAAQhB,QAAQK,KAC7BgD,WAAY,GAEdgM,WAAY,CACVrL,OAAQ,KACR9C,SAAUzB,EAAMgC,WAAWX,GAAGI,SAC9ByB,QAAS,eACTO,YAAa,EACbI,aAAc,MAEhBgM,YAAa,CACXtL,OAAQ,KACR9C,SAAUzB,EAAMgC,WAAWJ,GAAGH,SAC9B+C,UAAW,e,wCCoHFtC,GApJGnC,aAAiC,SAACC,GAAD,MAAY,CAC7D8P,SAAU,CACRrO,SAAU,SAACsO,GAAD,OACRA,EAAMC,aACFhQ,EAAMgC,WAAWH,GAAGJ,SACpBzB,EAAMgC,WAAWF,GAAGL,UAC1BH,MAAO,QACPK,WAAY,IACZsO,WAAY,WAEdC,SAAU,CACRlM,SAAU,WACVmM,SAAU,SAACJ,GAAD,OAAYA,EAAMC,aAAe,MAAQ,OACnDI,UAAW,OACXlM,IAAK,MACLD,KAAM,KACNtC,WAAY,OACZS,WAAY,SACZsB,UAAW,OACXG,aAAc,OACdwM,OAAQ,QACRC,YAAa,QACbC,QAAS,MAEXC,SAAU,CACRxM,SAAU,WACVmM,SAAU,MACVC,UAAW,OACXlM,IAAK,MACLG,MAAO,KACP1C,WAAY,OACZS,WAAY,SACZsB,UAAW,OACXG,aAAc,OACdwM,OAAQ,QACRC,YAAa,QACbC,QAAS,MAEXE,UAAW,CACTzM,SAAU,WACV0M,OAAQ,SAACX,GAAD,OAAYA,EAAMC,aAAe,MAAQ,OACjD/L,KAAM,MACN0M,UAAW,qBACXrP,MAAO,QACPkC,gBAAiBxD,EAAMuB,QAAQhB,QAAQK,KACvC,UAAW,CACT4C,gBAAiBxD,EAAMuB,QAAQhB,QAAQE,MAEzC,aAAc,CACZ+C,gBAAiBxD,EAAMuB,QAAQN,KAAK,OAGxC2P,WAAY,CACV5M,SAAU,WACV0M,OAAQ,SAACX,GAAD,OAAYA,EAAMC,aAAe,MAAQ,OACjDW,UAAW,qBACXtM,MAAO,MACP/C,MAAO,QACPkC,gBAAiBxD,EAAMuB,QAAQhB,QAAQK,KACvC,UAAW,CACT4C,gBAAiBxD,EAAMuB,QAAQhB,QAAQE,MAEzC,aAAc,CACZ+C,gBAAiBxD,EAAMuB,QAAQN,KAAK,OAGxC4P,UAAW,CACT7M,SAAU,WACV0M,OAAQ,MACRzM,KAAM,OAER6M,mBAAoB,CAClBnM,MAAO,OACPoM,SAAU,SACVvN,gBAAiB,QACjBP,OAAQ,OACRb,WAAY,SACZC,eAAgB,UAElB2O,SAAU,CACRrM,MAAO,OACPoM,SAAU,UAEZE,OAAQ,CACN/N,QAAS,OACT6N,SAAU,OACV1O,eAAgB,eAChByC,SAAU,UAEZoM,iBAAkB,CAChBhO,QAAS,OACT6N,SAAU,OACV1O,eAAgB,eAChBY,OAAQ,OAEVkO,eAAgB,CACdC,UAAW,UACXzM,MAAO,OACP1B,OAAQ,OACRO,gBAAiB,SAEnB6N,yBAA0B,CACxBD,UAAW,UACXzM,MAAO,OACP1B,OAAQ,MACRO,gBAAiB,SAEnB8N,KAAM,CACJtN,SAAU,WACVf,OAAQ,OACRO,gBAAiB,SAEnB+N,WAAY,CACVvN,SAAU,WACVE,IAAK,MACLD,KAAM,MACN3C,MAAO,QACPkC,gBAAiBxD,EAAMuB,QAAQhB,QAAQK,KACvC,UAAW,CACT4C,gBAAiBxD,EAAMuB,QAAQhB,QAAQE,OAG3CqD,MAAO,CACLxC,MAAOtB,EAAMuB,QAAQT,UAAUF,MAEjC4Q,SAAU,iBAAO,CACftQ,WAAY,QACZuQ,QAAS,KAEX/M,KAAM,CACJpD,MAAO,WAEToQ,QAAS,CACPrB,OAAQ,EACRsB,YAAa,QACbrB,YAAa,QACb9M,gBAAiB,QACjBP,OAAQ,QAEV2O,gBAAiB,CACfvB,OAAQ,EACRsB,YAAa,QACbrB,YAAa,UACb9M,gBAAiB,QACjBP,OAAQ,Y,8GCxIGf,GAZGnC,aAAkB,SAACC,GAAD,OAClCC,YAAa,CACX4R,OAAQ,CACN7N,SAAU,YAEZF,MAAO,CACLF,WAAY5D,EAAM8R,QAAQ,GAC1BC,KAAM,QCCNC,GAAsBjL,IAAMkL,YAChC,SACElC,EACAmC,GAEA,OAAO,cAACC,GAAA,EAAD,cAAOlQ,UAAU,OAAOiQ,IAAKA,GAASnC,OAIlC,SAASqC,GAAT,GAQX,IAPFC,EAOC,EAPDA,SACAC,EAMC,EANDA,OACAC,EAKC,EALDA,UAMM/P,EAAUgQ,KAChB,OACE,eAACC,EAAA,EAAD,CACElB,YAAU,EACVmB,KAAMJ,EACNK,QAAS,WACPJ,GAAU,IAEZP,oBAAqBA,GANvB,UAQE,cAACY,GAAA,EAAD,CAAQ9P,UAAWN,EAAQqP,OAA3B,SACE,cAACgB,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,KAAK,QACLzR,MAAM,UACN8E,QAAS,WACPmM,GAAU,IAEZS,aAAW,QANb,SAQE,cAAC,KAAD,UAILX,KChCP,IA8MeY,GA9Me,SAAC,GAUxB,IAMAC,EAfL3F,EASI,EATJA,mBACArG,EAQI,EARJA,eACA/B,EAOI,EAPJA,kBAOI,EACsCmG,mBAAS,GAD/C,mBACG6H,EADH,KACkBC,EADlB,OAEoC9H,oBAAS,GAF7C,mBAEG0E,EAFH,KAEiBqD,EAFjB,KAIE7Q,EAAU8Q,GAA8B,CAAEtD,aAAcA,KAJ1D,SAMCkD,OAND,eAMCA,IAND,kBAMCA,MAND,KAWJ,IAAMK,EAAuB,SAACtR,GAC5B,OAAQA,GACN,KAAKiR,EAAgBM,MACnBJ,GAAiB,SAACK,GAAD,OACfA,EAAOlG,EAAmB3G,OAAS,EAAI6M,EAAO,EAAIA,KAEpD,MACF,KAAKP,EAAgBQ,KACnBN,GAAiB,SAACK,GAAD,OAAWA,EAAO,EAAIA,EAAO,EAAIA,OAKlDE,EAAc,SAACzM,EAA4B0M,GAC/C,IAAID,GAAc,EAOlB,OALAzM,EAAeuE,SAAQ,SAACvG,GAClBA,EAAe2B,KAAO+M,IACxBD,GAAc,MAGXA,GAGHE,EACJtG,EAAmB3G,OAAS,EAC1B,qCACE,cAACkM,GAAA,EAAD,CACElL,KAAK,QACLD,SAA4B,IAAlBwL,EACVrQ,UAAWN,EAAQiO,UACnBrK,QAAS,kBAAMmN,EAAqBL,EAAgBQ,OAJtD,SAME,cAACI,GAAA,EAAD,CAAchR,UAAWN,EAAQqO,cAEnC,qBACEpL,IACE8H,EAAmB4F,IAC0B,QAA7C5F,EAAmB4F,GAAezN,OAC9B6H,EAAmB4F,GAAezN,OAClC,gCAEN5C,UACEkN,EACIxN,EAAQ6O,yBACR7O,EAAQ2O,eAEdxL,IAAI,KAEL4H,EAAmB4F,IAClB,eAACzQ,EAAA,EAAD,CAAKI,UAAWN,EAAQ0N,SAAxB,UACE,eAACrK,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,oBACUvC,EAAmB4F,GAAerP,SAE5C,eAAC+B,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,oBACUvC,EAAmB4F,GAAenN,SAE5C,eAACH,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,mBACSvC,EAAmB4F,GAAepN,QAE3C,eAACF,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,uBACavC,EAAmB4F,GAAejN,YAE/C,eAACL,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,0BACgBvC,EAAmB4F,GAAelN,iBAIrDsH,EAAmB4F,IAAkBnD,GACpC,cAACtN,EAAA,EAAD,CAAKI,UAAWN,EAAQgO,SAAxB,SACE,eAAC3K,EAAA,EAAD,CAAY/C,UAAWN,EAAQsN,SAA/B,mBACSvC,EAAmB4F,GAAe1I,UAI/C,cAACqI,GAAA,EAAD,CACElL,KAAK,QACLD,SAAUwL,IAAkB5F,EAAmB3G,OAAS,EACxD9D,UAAWN,EAAQoO,WACnBxK,QAAS,kBAAMmN,EAAqBL,EAAgBM,QAJtD,SAME,cAACO,GAAA,EAAD,MAEF,qBACEjR,UAAWkN,EAAexN,EAAQ0O,iBAAmB1O,EAAQyO,OAD/D,SAGE,cAAC+C,GAAA,EAAD,CACElC,QAAS,EACThP,UACEkN,EAAexN,EAAQsO,mBAAqBtO,EAAQwO,SAEtDiD,KACEjE,EAAejB,OAAOmF,YAAc,IAAOnF,OAAOoF,aAAe,EAEnEC,WAAYpE,EAAe,IAAOjB,OAAOoF,YAAc,IARzD,SAUG5G,EAAmBhG,KAAI,SAACC,EAAcrH,GAAf,OACtB,eAACkU,GAAA,EAAD,CAEEjO,QAAS,kBAAMgN,EAAiBjT,IAChC2C,UACE3C,IAAUgT,EACN3Q,EAAQoP,gBACRpP,EAAQkP,QANhB,UASE,qBACEjM,IACmB,QAAjB+B,EAAM9B,OACF8B,EAAM9B,OACN,gCAENC,IAAI,KAEN,cAAC2O,GAAA,EAAD,CACExQ,MAAO0D,EAAM1D,MAEbyQ,cAAc,MACdC,WACE,cAAC1B,GAAA,EAAD,CACEE,aAAA,eAAoBxL,EAAM1D,OAC1BhB,UAAWN,EAAQkC,KACnB0B,QAAS,WAELc,EAAeU,KAAO,IACrB+L,EAAYzM,EAAgBM,EAAMX,IAEnC1B,GAAkB,SAACkB,GACjB,IAAIoO,EAAc,IAAI/N,IAKtB,OAJAL,EAAUoF,SAAQ,SAACjE,GACjBiN,EAAY3N,IAAIU,MAElBiN,EAAY3N,IAAIU,GACTiN,KAEAd,EAAYzM,EAAgBM,EAAMX,KAC3C1B,GAAkB,SAACkB,GAGjB,IAFA,IAAMC,EAAoBC,MAAMC,KAAKH,GACjCI,EAAoB,IAAIC,IACnBC,EAAI,EAAGA,EAAIL,EAAkBM,OAAQD,IACxCL,EAAkBK,GAAGE,KAAOW,EAAMX,IACpCJ,EAAkBK,IAAIR,EAAkBK,IAG5C,OAAOF,MAzBf,SA8BGkN,EAAYzM,EAAgBM,EAAMX,IACjC,cAAC6N,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAINC,eAAe,OACf9R,UAAWN,EAAQgP,UAzCdhK,EAAMX,MAlBRW,EAAMX,cAkEnB,KAEN,OAAO0G,EAAmB3G,OAAS,EACjC,qCACE,eAAClE,EAAA,EAAD,CAAKI,UAAWN,EAAQ8O,KAAxB,UACGuC,EACD,cAACf,GAAA,EAAD,CACElL,KAAK,QACL9E,UAAWN,EAAQ+O,WACnBnL,QAAS,kBAAMiN,GAAgB,IAHjC,SAKE,cAACwB,GAAA,EAAD,SAGJ,cAACzC,GAAD,CAAgBE,OAAQtC,EAAcuC,UAAWc,EAAjD,SACGQ,OAGH,MCvJSiB,GAlEO,SAAC,GAchB,IAbLvH,EAaI,EAbJA,mBACAwH,EAYI,EAZJA,oBACA7N,EAWI,EAXJA,eACA/B,EAUI,EAVJA,kBACA6P,EASI,EATJA,SAUMxS,EAAUyS,KAEhB,OACE,cAACxN,EAAA,EAAD,CACE3E,UAAWN,EAAQQ,YACnBsC,MAAO,CACLrC,OAAQ,QAHZ,SAME,eAACP,EAAA,EAAD,CACE4C,MAAO,CACLpC,QAAS,OACTG,cAAe,SACfhB,eAAgB,gBAJpB,UAOE,eAACK,EAAA,EAAD,CACE4C,MAAO,CACL4P,MAAO,QAFX,UAKE,cAACrP,EAAA,EAAD,CAAY/C,UAAWN,EAAQoN,WAA/B,iCAGA,cAAC/J,EAAA,EAAD,CAAY/C,UAAWN,EAAQmN,iBAA/B,SACGoF,OAIL,cAACI,GAAA,EAAD,CACE1I,QAAQ,WACRH,UAAQ,EACRxJ,UAAWN,EAAQiN,YAHrB,SAKGlC,IAAuByH,EACtB,cAAC,GAAD,CACEzH,mBAAoBA,EACpBrG,eAAgBA,EAChB/B,kBAAmBA,IAGrB,cAACU,EAAA,EAAD,CAAY/C,UAAWN,EAAQqN,YAA/B,6E,UC1DG,SAASuF,GAAT,GAMX,IALFC,EAKC,EALDA,QACA1C,EAIC,EAJDA,QAKA,OACE,cAAC2C,GAAA,EAAD,CACEhQ,MAAO,CACLjD,eAAgB,SAChBD,WAAY,SACZgO,UAAW,SACXmF,WAAY,SACZjU,MAAO,WAETkU,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CL,QAASA,EACT3C,KAAMiD,QAAQN,EAAQzO,QACtBgP,OACE,cAAC9C,GAAA,EAAD,CACElL,KAAK,QACLoL,aAAW,QACX1R,MAAM,UACN8E,QAASuM,EAJX,SAME,cAAC,KAAD,CAAWlR,SAAS,YAGxBoU,iBAAkB,IAClBlD,QAASA,I,cCSA7K,GAxCmB/H,aAAW,kBAC3CE,YAAa,CACX8H,UAAW,CACT3E,UAAW,SACXD,UAAW,OACXD,QAAS,OACTb,eAAgB,UAElByB,MAAO,CACLxC,MAAOtB,EAAMuB,QAAQhB,QAAQK,KAC7B8C,UAAW,KACXjC,SAAUzB,EAAMgC,WAAWX,GAAGI,UAEhCqU,MAAO,CACL1E,UAAW,UACXzM,MAAO,OACP1B,OAAQ,QAEV8S,KAAM,CACJpR,MAAO,OACPhD,WAAY,OACZqU,aAAc,MACd5F,UAAW,SACX3O,SAAU,OACV4O,OAAQ,iBACR/N,OAAQ,EACRkB,gBAAiB,MACjBlC,MAAO,QACP0C,SAAU,YAEZL,SAAU,CACRT,QAAS,OACTb,eAAgB,SAChBuB,WAAY,OACZH,YAAa,OACbI,aAAc,W,kDCRL3B,GA5BGnC,YAAW,CAC3B+D,MAAO,CACLrC,SAAU,GACVkB,YAAa,IAEf8B,KAAM,CACJhD,SAAU,IAEZiD,KAAM,CACJC,MAAO,GACP1B,OAAQ,GACR3B,MAAO,SAETsD,eAAgB,CACdC,UAAW,OACXC,SAAU,QAEZC,cAAe,CACbtD,SAAU,GACVqD,SAAU,SACVE,aAAc,YAEhBiR,MAAO,CACLhT,OAAQ,OACRQ,YAAa,QCdXyS,GAAqB,SAAC,GAMrB,IALLhR,EAKI,EALJA,eACA/E,EAII,EAJJA,MAKMqC,EAAU2T,KAiBVC,EAAO,SAAC,GACZ,OAD6C,EAA/BjW,OAEZ,KAAK,EACH,OAAO,cAACkW,GAAA,EAAD,CAAU/Q,MAAO,CAAE7D,SAAU,UACtC,KAAK,EACH,OAAO,cAAC6U,GAAA,EAAD,CAAUhR,MAAO,CAAE7D,SAAU,UACtC,KAAK,EACH,OAAO,cAAC8U,GAAA,EAAD,CAAQjR,MAAO,CAAE7D,SAAU,UACpC,KAAK,EACH,OAAO,cAAC+U,GAAA,EAAD,CAAQlR,MAAO,CAAE7D,SAAU,UACpC,QACE,OAAO,cAACgV,GAAA,EAAD,CAAQnR,MAAO,CAAE7D,SAAU,YAIxC,OACE,cAAC0Q,GAAA,EAAD,CAAOuE,IAAE,EAACzU,UAAU,OAAOiJ,QAAS,IAApC,SACE,eAAC7F,EAAA,EAAD,CAEEC,MAAO,CACLpE,WAnCS,SAACf,GAChB,OAAQA,GACN,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,WAwBOwW,CAASxW,GACrB0D,aAAc,KACdc,MAAO,SALX,UAQE,cAACY,EAAA,EAAD,UACE,cAAC6Q,EAAD,CAAMjW,MAAOA,MAEf,qBAAKsF,IAAKP,EAAeQ,OAAQ5C,UAAWN,EAAQyT,MAAOtQ,IAAI,KAC/D,cAACC,EAAA,EAAD,CACErF,QAAS2E,EAAepB,MACxBhD,UACE,eAAC4B,EAAA,EAAD,CACE4C,MAAO,CACLX,MAAO,OACPhD,WAAY,OAHhB,UAME,cAACkE,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,SAAWG,EAAea,OAE7B,uBACA,cAACF,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,UAAYG,EAAec,QAE9B,uBACA,cAACH,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,gBAAkBG,EAAeuE,SAEpC,uBACA,cAAC5D,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,aAAeG,EAAegB,WAEjC,uBACA,cAACL,EAAA,EAAD,CAAYC,UAAW,OAAQhD,UAAWN,EAAQuC,cAAlD,SACG,oBAAsBG,EAAe0R,eArCzC1R,EAAe2B,OA+CbE,OAAMC,KAAKkP,IChDXW,GA5CY,WACzB,IAAMrU,EAAUsU,KADe,EAO3BC,aAAOlO,GAAkB,kBAC3B+B,GAAYE,kBAAkBkM,iBAJxBC,EAJuB,EAI7B3N,KACc4N,EALe,EAK7BC,aACAC,EAN6B,EAM7BA,MAKIC,EAAY/P,mBAChB,kBACE2P,GACAA,EAAS1P,KAAI,SAACrC,EAAqB/E,GAAtB,OACX,cAAC,GAAD,CAAoB+E,eAAgBA,EAAgB/E,MAAOA,SAE/D,CAAC8W,IAGH,OACE,cAACvU,EAAA,EAAD,CAAKyJ,EAAG,EAAGxH,MAAO,IAAK1B,OAAQ,IAAKH,UAAWN,EAAQuF,UAAvD,SACE,eAACrF,EAAA,EAAD,CACE4C,MAAO,CACLtB,SAAU,YAFd,UAKE,cAACtB,EAAA,EAAD,CAAKI,UAAWN,EAAQmB,SAAxB,SACE,cAACkC,EAAA,EAAD,CAAY/C,UAAWN,EAAQsB,MAA/B,sCAIDoT,EACC,cAAC,EAAD,IACEE,EACF,cAACvR,EAAA,EAAD,oCAEA,cAACgC,EAAA,EAAD,UAAOwP,UCsEFC,GA1GI,WAAO,IAAD,EAC+BhM,mBAAS,IADxC,mBAChByJ,EADgB,KACK1H,EADL,OAE6B/B,mBAAkB,IAF/C,mBAEhBiC,EAFgB,KAEID,EAFJ,OAGqBhC,mBAAqB,IAAI5E,KAH9C,mBAGhBQ,EAHgB,KAGA/B,EAHA,OAIUmG,oBAAS,GAJnB,mBAIhB0J,EAJgB,KAINxH,EAJM,OAKiClC,oBAAS,GAL1C,mBAKhBiM,EALgB,KAKMpQ,EALN,OAMuBmE,mBAAS,IANhC,mBAMhBkM,EANgB,KAMCpM,EAND,OAOqCE,oBAAS,GAP9C,mBAOhBmM,EAPgB,KAOQC,EAPR,KAoBvB,OAXA9I,qBAAU,WACR,IAAM+I,EAAiB,SAAChL,GACR,WAAVA,EAAEmC,MACJ3H,GAAwB,GACxBuQ,GAA0B,KAI9B,OADA3I,OAAOC,iBAAiB,QAAS2I,GAC1B,kBAAM5I,OAAOE,oBAAoB,QAAS0I,MAChD,CAACJ,EAAsBpQ,IAGxB,qCACE,cAACiO,GAAD,CACEC,QAASmC,EACT7E,QAAS,kBAAMvH,EAAmB,OAEpC,eAAC1I,EAAA,EAAD,CACE4C,MAAO,CACL9B,gBAAiB,YACjBP,OAAQ,QACRG,UAAW,UAJf,UAOE,cAACqP,EAAA,EAAD,CACEC,KAAM6E,EACN5E,QAAS,kBAAMxL,GAAwB,IAFzC,SAIE,cAAC,GAAD,CACED,eAAgBA,EAChBC,wBAAyBA,EACzBiE,mBAAoBA,MAGxB,cAACqH,EAAA,EAAD,CACEC,KAAM+E,EACNtH,SAAS,KACTwC,QAAS,kBAAM+E,GAA0B,IAH3C,SAKE,cAAC,GAAD,MAEF,eAACE,EAAA,EAAD,CAAMC,WAAS,EAAC/F,QAAS,EAAzB,UACE,cAAC8F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,qBAAK1S,MAAO,CAAE3C,YAAa,KAAMC,WAAY,MAA7C,SACE,qBACE6C,IAAK,2BACLE,IAAI,GACJ1C,OAAO,OACPqC,MAAO,CAAE6K,SAAU,OAAQxL,MAAO,aAIxC,cAACiT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC7R,EAAA,EAAD,CACEb,MAAO,CACL5B,UAAW,MACXW,MAAO,QACPqD,WAAY,SACZ2I,OAAQ,QACR4H,YAAa,OACb3H,YAAa,QAEflK,QAAS,kBAAMsR,GAA0B,IAT3C,mCAcF,cAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,GAAD,CACE1K,uBAAwBA,EACxBE,mBAAoBA,EACpBD,sBAAuBA,EACvBE,aAAcA,MAGlB,cAACoK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CACEhD,oBAAqBA,EACrBxH,mBAAoBA,EACpBrG,eAAgBA,EAChB/B,kBAAmBA,EACnB6P,SAAUA,MAGd,cAAC4C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACE7Q,eAAgBA,EAChB/B,kBAAmBA,EACnBgC,wBAAyBA,gBC1ExB+Q,GAxBO,WACpB,IAAM1V,EAAU1C,IAEhB,OAAOwH,mBACL,kBACE,qBAAKxE,UAAWN,EAAQtC,UAAxB,SACE,eAACiY,EAAA,EAAD,CAAenY,MAAOA,EAAtB,UACE,cAACoY,EAAA,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,mBAQd,CAAC/V,KC1BLgW,EAAQ,KAAUC,SAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7ad470ee.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const PageStyle = (theme: any) => {\r\n  return createStyles({\r\n    mainPanel: {\r\n      \r\n    },\r\n  });\r\n};\r\n\r\nconst usePageStyles = makeStyles((theme) => PageStyle(theme), { index: 1 });\r\n\r\nexport default usePageStyles;\r\n","import { colors } from \"@material-ui/core\";\r\n\r\nconst white = \"#FFFFFF\";\r\nconst black = \"#000000\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  common: { black, white },\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[800],\r\n    light: colors.red[600],\r\n  },\r\n  secondary:{\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[800],\r\n    light: colors.green[600],\r\n  },\r\n  text: {\r\n    primary: colors.grey[800],\r\n    secondary: colors.grey[700]\r\n  },\r\n  background: {\r\n    default: \"#F4F6F8\",\r\n    paper: white,\r\n  },\r\n};\r\n","import palette from \"./palette\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"23px\",\r\n    letterSpacing: \"-0.06px\",\r\n    lineHeight: \"26px\",\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"-0.06px\",\r\n    lineHeight: \"24px\",\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"17px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"12px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"14px\",\r\n  },\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport palette from \"./palette\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  direction: \"ltr\",\r\n});\r\n\r\nexport default theme;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  loadingProgress: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    zIndex: 10,\r\n  },\r\n});\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport progressStyle from \"../assets/styles/components/loadingBarStyle\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction LoadingAnimation() {\r\n  const classes = progressStyle();\r\n  return (\r\n    <Box paddingLeft=\"48%\" paddingTop=\"5%\">\r\n      <CircularProgress color=\"primary\" className={classes.loadingProgress} />\r\n    </Box>\r\n  );\r\n}\r\nexport default LoadingAnimation;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\nimport theme from \"../../theme\";\r\n\r\nconst NominationListStyle = makeStyles(() =>\r\n  createStyles({\r\n    searchPaper: {\r\n      height: \"65vh\",\r\n      display: \"flex\",\r\n      overflowY: \"auto\",\r\n      overflowX: \"hidden\",\r\n      flexDirection: \"column\",\r\n      fontSize: \"large\",\r\n      boxShadow: \"1\",\r\n      elevation: 5,\r\n      backgroundColor: \"white\",\r\n      marginRight: \"6%\",\r\n      marginTop: \"1%\",\r\n    },\r\n    boxStyle: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: \"3%\",\r\n      marginBottom: \"2%\",\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.dark,\r\n      fontSize: theme.typography.h1.fontSize,\r\n    },\r\n    submitButton: {\r\n      position: \"absolute\",\r\n      left: 25,\r\n      top: 5,\r\n      background: \"#F0F0F0\",\r\n      \"&:hover\": {\r\n        background: \"#a9a9a9\",\r\n      },\r\n    },\r\n    nominationBox: {\r\n      display: \"inline-flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    fullText: {\r\n      position: \"relative\",\r\n      color: \"red\",\r\n      right: 25,\r\n      top: 5,\r\n    },\r\n    noneSelectedText: {\r\n      margin: \"2%\",\r\n      fontSize: theme.typography.h2.fontSize,\r\n      fontStyle: \"italic\",\r\n      marginLeft: \"35%\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default NominationListStyle;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 18,\r\n    paddingLeft: 10,\r\n  },\r\n  body: {\r\n    fontSize: 12,\r\n  },\r\n  icon: {\r\n    width: 55,\r\n    height: 55,\r\n    color: \"black\",\r\n  },\r\n  annotationList: {\r\n    maxHeight: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n  secondaryText: {\r\n    fontSize: 14,\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import {\r\n  Box,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MovieCreation } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Movie } from \"../services/types\";\r\nimport useNominationListItemStyle from \"../assets/styles/components/nominationListItemStyle\";\r\n\r\nconst NominationListItem = ({\r\n  nominatedMovie,\r\n  setNominationList,\r\n}: {\r\n  nominatedMovie: Movie;\r\n  setNominationList: (\r\n    nominationList: Set<Movie> | ((prevState: Set<Movie>) => Set<Movie>)\r\n  ) => void;\r\n}) => {\r\n  const classes = useNominationListItemStyle();\r\n\r\n  return (\r\n    <ListItem\r\n      key={nominatedMovie.id}\r\n      style={{ background: \"#F0F0F0\", marginBottom: \"1%\" }}\r\n    >\r\n      <ListItemAvatar>\r\n        <MovieCreation />\r\n      </ListItemAvatar>\r\n      <img\r\n        src={nominatedMovie.poster}\r\n        style={{ height: \"15vh\", marginRight: \"5%\" }}\r\n        alt=\"\"\r\n      />\r\n      <ListItemText\r\n        primary={nominatedMovie.title}\r\n        secondary={\r\n          <Box\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Typography component={\"span\"} className={classes.secondaryText}>\r\n              {\"Year: \" + nominatedMovie.year}\r\n            </Typography>\r\n            <br />\r\n            <Typography component={\"span\"} className={classes.secondaryText}>\r\n              {\"Genre: \" + nominatedMovie.genre}\r\n            </Typography>\r\n            <br />\r\n            <Typography component={\"span\"} className={classes.secondaryText}>\r\n              {\"IMDb Rating: \" + nominatedMovie.imdbRating}\r\n            </Typography>\r\n            <br />\r\n            <Typography component={\"span\"} className={classes.secondaryText}>\r\n              {\"Director: \" + nominatedMovie.director}\r\n            </Typography>\r\n          </Box>\r\n        }\r\n      />\r\n      <Button\r\n        style={{ height: \"100%\" }}\r\n        onClick={() => {\r\n          setNominationList((prevState) => {\r\n            const oldNominationList = Array.from(prevState);\r\n            let newNominationList = new Set<Movie>();\r\n            for (let i = 0; i < oldNominationList.length; i++) {\r\n              if (oldNominationList[i].id !== nominatedMovie.id) {\r\n                newNominationList.add(oldNominationList[i]);\r\n              }\r\n            }\r\n            return newNominationList;\r\n          });\r\n        }}\r\n      >\r\n        Remove\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default React.memo(NominationListItem);\r\n","import { Box, Button, List, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { useMemo } from \"react\";\r\nimport useNominationListStyle from \"../assets/styles/components/nominationListStyle\";\r\nimport { Movie } from \"../services/types\";\r\nimport NominationListItem from \"./NominationListItem\";\r\n\r\nconst NominationList = ({\r\n  nominationList,\r\n  setNominationList,\r\n  setSubmissionDialogOpen,\r\n}: {\r\n  nominationList: Set<Movie>;\r\n  setNominationList: (\r\n    nominationList: Set<Movie> | ((prevState: Set<Movie>) => Set<Movie>)\r\n  ) => void;\r\n  setSubmissionDialogOpen: (\r\n    submissionDialogOpen: boolean | ((prevState: boolean) => boolean)\r\n  ) => void;\r\n}) => {\r\n  const classes = useNominationListStyle();\r\n  const nominatedMovies = useMemo(\r\n    () =>\r\n      Array.from(nominationList).map((movie: Movie) => (\r\n        <NominationListItem\r\n          nominatedMovie={movie}\r\n          setNominationList={setNominationList}\r\n        />\r\n      )),\r\n    [nominationList, setNominationList]\r\n  );\r\n  return (\r\n    <Paper className={classes.searchPaper}>\r\n      <Box className={classes.nominationBox}>\r\n        <Box style={{ position: \"relative\", whiteSpace: \"nowrap\" }}>\r\n          <Button\r\n            className={classes.submitButton}\r\n            onClick={() => setSubmissionDialogOpen((prevState) => !prevState)}\r\n            style={{ position: \"relative\" }}\r\n            disabled={nominationList.size === 0}\r\n          >\r\n            Submit Nominations\r\n          </Button>\r\n        </Box>\r\n\r\n        <Box className={classes.boxStyle}>\r\n          <Typography className={classes.title}>Nomination List</Typography>\r\n        </Box>\r\n        <Box style={{ position: \"relative\", whiteSpace: \"nowrap\" }}>\r\n          <Typography className={classes.fullText}>\r\n            {nominationList.size === 5\r\n              ? \"*Nomination List Full\"\r\n              : \"Select up to 5 movies!\"}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      {nominatedMovies.length === 0 ? (\r\n        <Typography className={classes.noneSelectedText}>\r\n          No movies nominated...\r\n        </Typography>\r\n      ) : (\r\n        <List>{nominatedMovies}</List>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NominationList;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst NominationSubmissionStyle = makeStyles((theme: any) =>\r\n  createStyles({\r\n    dialogBox: {\r\n      overflowX: \"hidden\",\r\n      overflowY: \"auto\",\r\n    },\r\n    textField: {\r\n      marginTop: \"5%\",\r\n      marginLeft: \"15%\",\r\n      marginRight: \"15%\",\r\n      marginBottom: \"5%\",\r\n      width: \"70%\",\r\n    },\r\n    button: {\r\n      margin: 10,\r\n    },\r\n    buttonBox: {\r\n      marginLeft: 85,\r\n    },\r\n    submitText: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"2%\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default NominationSubmissionStyle;\r\n","export const ENDPOINTS = {\r\n  OMDBSEARCH: `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}`,\r\n  OMDBSEARCHMOVIEINFO: `https://www.omdbapi.com/?plot=short&apikey=${process.env.REACT_APP_API_KEY}`,\r\n  NOMINATIONSUBMISSION: \"https://omdb-nomination.herokuapp.com/movies/add\",\r\n  USERSTORE: \"https://omdb-nomination.herokuapp.com/users/add\",\r\n  CHECKUSER: \"https://omdb-nomination.herokuapp.com/users/checkuser\",\r\n  RANKINGS: \"https://omdb-nomination.herokuapp.com/movies/top\",\r\n  EMAIL: \"https://omdb-nomination.herokuapp.com/emails\",\r\n};\r\n\r\nexport const SWRKeys = {\r\n  RANKINGS: \"rankings\",\r\n};\r\n","import { AxiosInstance } from \"axios\";\r\nimport { ENDPOINTS } from \"./constants\";\r\nimport { Email, EmailInterface } from \"./types\";\r\n\r\nexport class EmailService implements EmailInterface {\r\n  private apiInstance: AxiosInstance;\r\n\r\n  constructor({ apiInstance }: { apiInstance: AxiosInstance }) {\r\n    this.apiInstance = apiInstance;\r\n  }\r\n\r\n  async sendEmail(email: Email): Promise<any> {\r\n    const endpoint = `${ENDPOINTS.EMAIL}`;\r\n    const resp = await this.apiInstance.post(endpoint, {\r\n      body: email.body,\r\n      recipient: email.recipient,\r\n    });\r\n    return resp.data;\r\n  }\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\nimport { ENDPOINTS } from \"./constants\";\r\nimport { serializeNomination } from \"./serializers\";\r\n\r\nimport { Movie, NominationInterface } from \"./types\";\r\n\r\nexport class NominationService implements NominationInterface {\r\n  private apiInstance: AxiosInstance;\r\n\r\n  constructor({ apiInstance }: { apiInstance: AxiosInstance }) {\r\n    this.apiInstance = apiInstance;\r\n  }\r\n\r\n  async submitNomination(movie: Movie): Promise<any> {\r\n    const data = serializeNomination(movie);\r\n    const endpoint = `${ENDPOINTS.NOMINATIONSUBMISSION}`;\r\n    const resp = await this.apiInstance.post(endpoint, data);\r\n    return resp.data;\r\n  }\r\n\r\n  async checkUserExists(email: string): Promise<any> {\r\n    const endpoint = `${ENDPOINTS.CHECKUSER}`;\r\n    const resp = await this.apiInstance.post(endpoint, { email: email });\r\n    return resp;\r\n  }\r\n\r\n  async storeUser(email: string): Promise<any> {\r\n    const endpoint = `${ENDPOINTS.USERSTORE}`;\r\n    const resp = await this.apiInstance.post(endpoint, { email: email });\r\n    return resp.data;\r\n  }\r\n\r\n  async getRankings(): Promise<any> {\r\n    const endpoint = `${ENDPOINTS.RANKINGS}`;\r\n    const resp = await this.apiInstance.get(endpoint);\r\n    return resp.data;\r\n  }\r\n}\r\n","import { Movie } from \"./types\";\r\n\r\nexport function serializeNomination(moviesObj: Movie) {\r\n  return {\r\n    id: moviesObj.id,\r\n    title: moviesObj.title,\r\n    year: moviesObj.year,\r\n    genre: moviesObj.genre,\r\n    director: moviesObj.director,\r\n    rating: moviesObj.imdbRating,\r\n    poster: moviesObj.poster,\r\n  };\r\n}\r\n\r\nexport function deserializeMovieIds(moviesObj: any): string[] {\r\n  return moviesObj.Search.map((movie: any) => movie.imdbID);\r\n}\r\n\r\nexport function deserializeMovieInfo(movieObj: any): Movie {\r\n  return {\r\n    poster: movieObj.data.Poster,\r\n    title: movieObj.data.Title,\r\n    genre: movieObj.data.Genre,\r\n    director: movieObj.data.Director,\r\n    year: movieObj.data.Year,\r\n    imdbRating: movieObj.data.imdbRating,\r\n    plot: movieObj.data.Plot,\r\n    id: movieObj.data.imdbID,\r\n  };\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\nimport { ENDPOINTS } from \"./constants\";\r\nimport { deserializeMovieInfo } from \"./serializers\";\r\nimport {\r\n  FilterMovieInfoOptions,\r\n  FilterMovieOptions,\r\n  MovieSearchInterface,\r\n} from \"./types\";\r\n\r\nexport class OMDBService implements MovieSearchInterface {\r\n  private apiInstance: AxiosInstance;\r\n\r\n  constructor({ apiInstance }: { apiInstance: AxiosInstance }) {\r\n    this.apiInstance = apiInstance;\r\n  }\r\n\r\n  async searchMovies(filterOptions: FilterMovieOptions): Promise<any> {\r\n    let queryString = \"&\";\r\n    queryString += Object.entries(filterOptions)\r\n      .map(([parameter, value]) => (value ? `${parameter}=${value}` : \"\"))\r\n      .join(\"&\");\r\n    const endpoint = `${ENDPOINTS.OMDBSEARCH}${queryString}`;\r\n    const resp = await this.apiInstance.get(endpoint);\r\n    return resp.data;\r\n  }\r\n\r\n  async getMovieInfo(filterOptions: FilterMovieInfoOptions): Promise<any> {\r\n    const endpoint = `${ENDPOINTS.OMDBSEARCHMOVIEINFO}&i=${filterOptions.i}`;\r\n    const resp = await this.apiInstance.get(endpoint);\r\n    return deserializeMovieInfo(resp);\r\n  }\r\n}\r\n","import { MovieServer } from \"./MovieServer\";\r\n\r\nconst movieServer = new MovieServer();\r\n\r\nexport { movieServer };\r\n","import axios from \"axios\";\r\nimport { EmailService } from \"./Email\";\r\nimport { NominationService } from \"./Nominations\";\r\nimport { OMDBService } from \"./OMDB\";\r\nimport {\r\n  SearchServerInterface,\r\n  MovieSearchInterface,\r\n  NominationInterface,\r\n  EmailInterface,\r\n} from \"./types\";\r\n\r\nexport class MovieServer implements SearchServerInterface {\r\n  readonly movieSearchService: MovieSearchInterface;\r\n  readonly nominationService: NominationInterface;\r\n  readonly emailService: EmailInterface;\r\n\r\n  constructor() {\r\n    const apiInstance = axios.create({ timeout: 10000 });\r\n\r\n    this.movieSearchService = new OMDBService({ apiInstance });\r\n    this.nominationService = new NominationService({ apiInstance });\r\n    this.emailService = new EmailService({ apiInstance });\r\n  }\r\n}\r\n","import { Box, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { Close, Save } from \"@material-ui/icons\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport useNominationSubmissionStyle from \"../assets/styles/components/nominationSubmissionStyle\";\r\nimport { movieServer } from \"../services\";\r\nimport { Email, Movie } from \"../services/types\";\r\n\r\nconst NominationSubmission = ({\r\n  nominationList,\r\n  setSubmissionDialogOpen,\r\n  setSnackbarMessage,\r\n}: {\r\n  nominationList: Set<Movie>;\r\n  setSubmissionDialogOpen: (\r\n    submissionDialogOpen: boolean | ((prevState: boolean) => boolean)\r\n  ) => void;\r\n  setSnackbarMessage: (\r\n    snackbarMessage: string | ((prevState: string) => string)\r\n  ) => void;\r\n}) => {\r\n  const classes = useNominationSubmissionStyle();\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const validateEmail = (email: string) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n\r\n  const emailBody = (nominationList: Set<Movie>) => {\r\n    let body = \"\";\r\n    Array.from(nominationList).forEach((movie) => {\r\n      body += `${movie.title}, ${movie.year}, ${movie.genre}, ${movie.director}, ${movie.imdbRating}<br />`;\r\n    });\r\n    return body;\r\n  };\r\n\r\n  const submitNomination = useCallback(async () => {\r\n    try {\r\n      const userExists = await movieServer.nominationService.checkUserExists(\r\n        email\r\n      );\r\n      if (userExists.data === true) {\r\n        setSnackbarMessage(\r\n          \"You have already submitted nominations with this email!\"\r\n        );\r\n      } else {\r\n        //await movieServer.nominationService.storeUser(email);\r\n        await Promise.all(\r\n          Array.from(nominationList).map(async (movie: Movie) => {\r\n            await movieServer.nominationService.submitNomination(movie);\r\n          })\r\n        );\r\n        setSnackbarMessage(\"Nominations successfully submitted!\");\r\n        setSubmissionDialogOpen(false);\r\n        try {\r\n          await movieServer.emailService.sendEmail({\r\n            body: emailBody(nominationList),\r\n            recipient: email,\r\n          } as Email);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    } catch {\r\n      setSnackbarMessage(\"There was an error submitting your nominations.\");\r\n    }\r\n  }, [email, nominationList, setSnackbarMessage, setSubmissionDialogOpen]);\r\n\r\n  return (\r\n    <Box m={1} width={400} height={180} className={classes.dialogBox}>\r\n      <Typography className={classes.submitText}>Submit Nominations</Typography>\r\n      <TextField\r\n        autoFocus\r\n        className={classes.textField}\r\n        required\r\n        multiline\r\n        id=\"add-site\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <Box className={classes.buttonBox}>\r\n        <Button\r\n          className={classes.button}\r\n          size={\"small\"}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<Close />}\r\n          onClick={(e) => {\r\n            setSubmissionDialogOpen(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          size={\"small\"}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<Save />}\r\n          onClick={() => {\r\n            if (validateEmail(email)) {\r\n              submitNomination();\r\n            } else {\r\n              setSnackbarMessage(\"Please enter a valid email!\");\r\n            }\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NominationSubmission;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst SearchBarStyle = makeStyles(() =>\r\n  createStyles({\r\n    searchPaper: {\r\n      display: \"flex\",\r\n      overflow: \"hidden\",\r\n      flexDirection: \"column\",\r\n      fontSize: \"large\",\r\n      boxShadow: \"1\",\r\n      elevation: 5,\r\n      backgroundColor: \"white\",\r\n      marginLeft: \"3%\",\r\n      marginRight: \"3%\",\r\n      marginTop: \"1%\",\r\n    },\r\n    textField: {\r\n      margin: 15,\r\n      width: \"100%\",\r\n    },\r\n    searchButton: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"middle\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default SearchBarStyle;\r\n","import {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { MovieCreation, Search } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport useSearchBarStyle from \"../assets/styles/components/searchBarStyle\";\r\nimport { movieServer } from \"../services\";\r\nimport { deserializeMovieIds } from \"../services/serializers\";\r\nimport { Movie } from \"../services/types\";\r\n\r\nconst SearchBar = ({\r\n  setSearchResultDisplay,\r\n  searchedMoviesInfo,\r\n  setSearchedMoviesInfo,\r\n  setNoResults,\r\n}: {\r\n  setSearchResultDisplay: (\r\n    searchResultDisplay: string | ((prevState: string) => string)\r\n  ) => void;\r\n  searchedMoviesInfo: Movie[];\r\n  setSearchedMoviesInfo: (\r\n    searchResults: Movie[] | ((prevState: Movie[]) => Movie[])\r\n  ) => void;\r\n  setNoResults: (\r\n    noResults: boolean | ((prevState: boolean) => boolean)\r\n  ) => void;\r\n}) => {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [searchYear, setSearchYear] = useState(\"\");\r\n  const classes = useSearchBarStyle();\r\n\r\n  const handleSearch = useCallback(async () => {\r\n    try {\r\n      setSearchedMoviesInfo([]);\r\n      let listOfWords = searchString.split(\" \");\r\n      for (let i = 0; i < listOfWords.length; i++) {\r\n        if (listOfWords[i] === `(${searchYear})`) {\r\n          listOfWords.splice(i, 1);\r\n        } else {\r\n          listOfWords[i] = listOfWords[i]\r\n            .replace(`(${searchYear})`, \"\")\r\n            .replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n        }\r\n      }\r\n      if (listOfWords[listOfWords.length - 1] === \"\") {\r\n        listOfWords.pop();\r\n      }\r\n\r\n      let newSearchResults = await movieServer.movieSearchService.searchMovies(\r\n        searchYear !== \"\"\r\n          ? {\r\n              s: listOfWords.join(\" \"),\r\n              y: searchYear,\r\n            }\r\n          : { s: searchString }\r\n      );\r\n      if (newSearchResults.Response === \"False\") {\r\n        setNoResults(true);\r\n      } else {\r\n        newSearchResults = deserializeMovieIds(newSearchResults);\r\n        setNoResults(false);\r\n      }\r\n      await Promise.all(\r\n        newSearchResults.map(async (id: string) => {\r\n          const movieInfo = await movieServer.movieSearchService.getMovieInfo({\r\n            i: id,\r\n          });\r\n          setSearchedMoviesInfo((prevState) => [...prevState, movieInfo]);\r\n        })\r\n      );\r\n    } catch (error) {\r\n    } finally {\r\n      setSearchResultDisplay(searchString);\r\n      setSearchString(\"\");\r\n      setSearchYear(\"\");\r\n    }\r\n  }, [\r\n    searchString,\r\n    searchYear,\r\n    setSearchResultDisplay,\r\n    setSearchedMoviesInfo,\r\n    setNoResults,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const handleEnter = (e: KeyboardEvent) => {\r\n      if (e.key === \"Enter\" && searchString !== \"\") {\r\n        handleSearch();\r\n      }\r\n    };\r\n    window.addEventListener(\"keyup\", handleEnter);\r\n    return () => window.removeEventListener(\"keyup\", handleEnter);\r\n  }, [handleSearch, searchString]);\r\n\r\n  useEffect(() => {\r\n    const regExp = /\\(([^)]+)\\)/;\r\n    const matches = searchString.match(regExp);\r\n    setSearchYear(matches ? matches[1] : \"\");\r\n  }, [searchString, searchYear]);\r\n\r\n  return (\r\n    <Paper className={classes.searchPaper}>\r\n      <Box style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <TextField\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          className={classes.textField}\r\n          id=\"search-bar\"\r\n          label=\"Search Movie Title (e.g. The Matrix (1999))\"\r\n          value={searchString}\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <MovieCreation />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={(e) => {\r\n            setSearchString(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            handleSearch();\r\n          }}\r\n          className={classes.searchButton}\r\n          disabled={searchString === \"\"}\r\n        >\r\n          <Search />\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\nimport theme from \"../../theme\";\r\n\r\nconst SearchResultsStyle = makeStyles(() =>\r\n  createStyles({\r\n    searchPaper: {\r\n      display: \"flex\",\r\n      overflowY: \"auto\",\r\n      flexDirection: \"column\",\r\n      fontSize: \"large\",\r\n      boxShadow: \"1\",\r\n      elevation: 5,\r\n      backgroundColor: \"white\",\r\n      marginLeft: \"6%\",\r\n      marginRight: \"2%\",\r\n      marginTop: \"1%\",\r\n    },\r\n    formControl: {\r\n      minWidth: 100,\r\n      margin: 15,\r\n    },\r\n    searchResultText: {\r\n      fontStyle: \"italic\",\r\n      fontSize: theme.typography.h1.fontSize,\r\n      display: \"inline-block\",\r\n      color: theme.palette.primary.main,\r\n      marginLeft: 0,\r\n    },\r\n    resultText: {\r\n      margin: \"3%\",\r\n      fontSize: theme.typography.h1.fontSize,\r\n      display: \"inline-block\",\r\n      marginRight: 5,\r\n      marginBottom: \"1%\",\r\n    },\r\n    noMatchText: {\r\n      margin: \"2%\",\r\n      fontSize: theme.typography.h2.fontSize,\r\n      fontStyle: \"italic\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default SearchResultsStyle;\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\ninterface CarouselProps {\r\n  isFullscreen: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, CarouselProps>((theme) => ({\r\n  filmText: {\r\n    fontSize: (props) =>\r\n      props.isFullscreen\r\n        ? theme.typography.h3.fontSize\r\n        : theme.typography.h4.fontSize,\r\n    color: \"white\",\r\n    lineHeight: 1.5,\r\n    fontFamily: \"Georgia\",\r\n  },\r\n  filmInfo: {\r\n    position: \"absolute\",\r\n    maxWidth: (props) => (props.isFullscreen ? \"15%\" : \"30%\"),\r\n    textAlign: \"left\",\r\n    top: \"25%\",\r\n    left: \"6%\",\r\n    lineHeight: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    border: \"solid\",\r\n    borderColor: \"white\",\r\n    padding: \"1%\",\r\n  },\r\n  filmPlot: {\r\n    position: \"absolute\",\r\n    maxWidth: \"20%\",\r\n    textAlign: \"left\",\r\n    top: \"25%\",\r\n    right: \"5%\",\r\n    lineHeight: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    border: \"solid\",\r\n    borderColor: \"white\",\r\n    padding: \"1%\",\r\n  },\r\n  leftClick: {\r\n    position: \"absolute\",\r\n    bottom: (props) => (props.isFullscreen ? \"50%\" : \"25%\"),\r\n    left: \"5px\",\r\n    transform: \"translate(0%, 50%)\",\r\n    color: \"white\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    \"&:disabled\": {\r\n      backgroundColor: theme.palette.grey[500],\r\n    },\r\n  },\r\n  rightClick: {\r\n    position: \"absolute\",\r\n    bottom: (props) => (props.isFullscreen ? \"50%\" : \"25%\"),\r\n    transform: \"translate(0%, 50%)\",\r\n    right: \"5px\",\r\n    color: \"white\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    \"&:disabled\": {\r\n      backgroundColor: theme.palette.grey[500],\r\n    },\r\n  },\r\n  backArrow: {\r\n    position: \"relative\",\r\n    bottom: \"50%\",\r\n    left: \"5px\",\r\n  },\r\n  gridListFullScreen: {\r\n    width: \"100%\",\r\n    flexWrap: \"nowrap\",\r\n    backgroundColor: \"black\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  images: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n  },\r\n  imagesFullScreen: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    height: \"20%\",\r\n  },\r\n  largeImageView: {\r\n    objectFit: \"contain\",\r\n    width: \"100%\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  largeImageViewFullScreen: {\r\n    objectFit: \"contain\",\r\n    width: \"100%\",\r\n    height: \"80%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    position: \"relative\",\r\n    height: \"20vh\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  fullScreen: {\r\n    position: \"absolute\",\r\n    top: \"7px\",\r\n    left: \"7px\",\r\n    color: \"white\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  title: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  titleBar: () => ({\r\n    background: \"black\",\r\n    opacity: 0.8,\r\n  }),\r\n  icon: {\r\n    color: \"#FFDF00\",\r\n  },\r\n  preview: {\r\n    border: 2,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"white\",\r\n    backgroundColor: \"black\",\r\n    height: \"100%\",\r\n  },\r\n  previewSelected: {\r\n    border: 4,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#0000ff\",\r\n    backgroundColor: \"black\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles<Theme>((theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      position: \"relative\",\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\n","import React, { ReactNode } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport useFullScreenStyle from \"../assets/styles/components/fullScreenStyle\";\r\n\r\nconst TransitionComponent = React.forwardRef(\r\n  (\r\n    props: TransitionProps & { children?: React.ReactElement },\r\n    ref: React.Ref<unknown>\r\n  ) => {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n  }\r\n);\r\n\r\nexport default function FullScreenView({\r\n  children,\r\n  isOpen,\r\n  setIsOpen,\r\n}: {\r\n  children: ReactNode | ReactNode[];\r\n  isOpen: boolean;\r\n  setIsOpen: (isOpen: boolean) => void;\r\n}) {\r\n  const classes = useFullScreenStyle();\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setIsOpen(false);\r\n      }}\r\n      TransitionComponent={TransitionComponent}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Movie } from \"../services/types\";\r\nimport useSearchResultsCarouselStyle from \"../assets/styles/components/searchResultsCarouselStyle\";\r\nimport {\r\n  ArrowBackIos,\r\n  ArrowForwardIos,\r\n  Fullscreen,\r\n  Star,\r\n  StarBorder,\r\n} from \"@material-ui/icons\";\r\nimport FullScreenView from \"./FullScreenView\";\r\n\r\nconst SearchResultsCarousel = ({\r\n  searchedMoviesInfo,\r\n  nominationList,\r\n  setNominationList,\r\n}: {\r\n  searchedMoviesInfo: Movie[];\r\n  nominationList: Set<Movie>;\r\n  setNominationList: (\r\n    nominationList: Set<Movie> | ((prevState: Set<Movie>) => Set<Movie>)\r\n  ) => void;\r\n}) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  const classes = useSearchResultsCarouselStyle({ isFullscreen: isFullscreen });\r\n\r\n  enum SelectDirection {\r\n    Left,\r\n    Right,\r\n  }\r\n\r\n  const handleTraverseImages = (direction: SelectDirection) => {\r\n    switch (direction) {\r\n      case SelectDirection.Right:\r\n        setSelectedIndex((prev) =>\r\n          prev < searchedMoviesInfo.length - 1 ? prev + 1 : prev\r\n        );\r\n        break;\r\n      case SelectDirection.Left:\r\n        setSelectedIndex((prev) => (prev > 0 ? prev - 1 : prev));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const isNominated = (nominationList: Set<Movie>, movieId: string) => {\r\n    let isNominated = false;\r\n\r\n    nominationList.forEach((nominatedMovie) => {\r\n      if (nominatedMovie.id === movieId) {\r\n        isNominated = true;\r\n      }\r\n    });\r\n    return isNominated;\r\n  };\r\n\r\n  const searchResultsView =\r\n    searchedMoviesInfo.length > 0 ? (\r\n      <>\r\n        <IconButton\r\n          size=\"small\"\r\n          disabled={selectedIndex === 0}\r\n          className={classes.leftClick}\r\n          onClick={() => handleTraverseImages(SelectDirection.Left)}\r\n        >\r\n          <ArrowBackIos className={classes.backArrow} />\r\n        </IconButton>\r\n        <img\r\n          src={\r\n            searchedMoviesInfo[selectedIndex] &&\r\n            searchedMoviesInfo[selectedIndex].poster !== \"N/A\"\r\n              ? searchedMoviesInfo[selectedIndex].poster\r\n              : \"/images/image_placeholder.jpg\"\r\n          }\r\n          className={\r\n            isFullscreen\r\n              ? classes.largeImageViewFullScreen\r\n              : classes.largeImageView\r\n          }\r\n          alt=\"\"\r\n        />\r\n        {searchedMoviesInfo[selectedIndex] && (\r\n          <Box className={classes.filmInfo}>\r\n            <Typography className={classes.filmText}>\r\n              Title: {searchedMoviesInfo[selectedIndex].title}\r\n            </Typography>\r\n            <Typography className={classes.filmText}>\r\n              Genre: {searchedMoviesInfo[selectedIndex].genre}\r\n            </Typography>\r\n            <Typography className={classes.filmText}>\r\n              Year: {searchedMoviesInfo[selectedIndex].year}\r\n            </Typography>\r\n            <Typography className={classes.filmText}>\r\n              Director: {searchedMoviesInfo[selectedIndex].director}\r\n            </Typography>\r\n            <Typography className={classes.filmText}>\r\n              IMDb Rating: {searchedMoviesInfo[selectedIndex].imdbRating}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {searchedMoviesInfo[selectedIndex] && isFullscreen && (\r\n          <Box className={classes.filmPlot}>\r\n            <Typography className={classes.filmText}>\r\n              Plot: {searchedMoviesInfo[selectedIndex].plot}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <IconButton\r\n          size=\"small\"\r\n          disabled={selectedIndex === searchedMoviesInfo.length - 1}\r\n          className={classes.rightClick}\r\n          onClick={() => handleTraverseImages(SelectDirection.Right)}\r\n        >\r\n          <ArrowForwardIos />\r\n        </IconButton>\r\n        <div\r\n          className={isFullscreen ? classes.imagesFullScreen : classes.images}\r\n        >\r\n          <GridList\r\n            spacing={2}\r\n            className={\r\n              isFullscreen ? classes.gridListFullScreen : classes.gridList\r\n            }\r\n            cols={\r\n              isFullscreen ? window.innerWidth / (0.15 * window.innerHeight) : 6\r\n            }\r\n            cellHeight={isFullscreen ? 0.15 * window.innerHeight : 180}\r\n          >\r\n            {searchedMoviesInfo.map((movie: Movie, index: number) => (\r\n              <GridListTile\r\n                key={movie.id}\r\n                onClick={() => setSelectedIndex(index)}\r\n                className={\r\n                  index === selectedIndex\r\n                    ? classes.previewSelected\r\n                    : classes.preview\r\n                }\r\n              >\r\n                <img\r\n                  src={\r\n                    movie.poster !== \"N/A\"\r\n                      ? movie.poster\r\n                      : \"/images/image_placeholder.jpg\"\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <GridListTileBar\r\n                  title={movie.title}\r\n                  key={movie.id}\r\n                  titlePosition=\"top\"\r\n                  actionIcon={\r\n                    <IconButton\r\n                      aria-label={`star ${movie.title}`}\r\n                      className={classes.icon}\r\n                      onClick={() => {\r\n                        if (\r\n                          nominationList.size < 5 &&\r\n                          !isNominated(nominationList, movie.id)\r\n                        ) {\r\n                          setNominationList((prevState) => {\r\n                            let addedMovies = new Set<Movie>();\r\n                            prevState.forEach((movie: Movie) => {\r\n                              addedMovies.add(movie);\r\n                            });\r\n                            addedMovies.add(movie);\r\n                            return addedMovies;\r\n                          });\r\n                        } else if (isNominated(nominationList, movie.id)) {\r\n                          setNominationList((prevState) => {\r\n                            const oldNominationList = Array.from(prevState);\r\n                            let newNominationList = new Set<Movie>();\r\n                            for (let i = 0; i < oldNominationList.length; i++) {\r\n                              if (oldNominationList[i].id !== movie.id) {\r\n                                newNominationList.add(oldNominationList[i]);\r\n                              }\r\n                            }\r\n                            return newNominationList;\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      {isNominated(nominationList, movie.id) ? (\r\n                        <Star />\r\n                      ) : (\r\n                        <StarBorder />\r\n                      )}\r\n                    </IconButton>\r\n                  }\r\n                  actionPosition=\"left\"\r\n                  className={classes.titleBar}\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      </>\r\n    ) : null;\r\n\r\n  return searchedMoviesInfo.length > 0 ? (\r\n    <>\r\n      <Box className={classes.card}>\r\n        {searchResultsView}\r\n        <IconButton\r\n          size=\"small\"\r\n          className={classes.fullScreen}\r\n          onClick={() => setIsFullscreen(true)}\r\n        >\r\n          <Fullscreen />\r\n        </IconButton>\r\n      </Box>\r\n      <FullScreenView isOpen={isFullscreen} setIsOpen={setIsFullscreen}>\r\n        {searchResultsView}\r\n      </FullScreenView>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchResultsCarousel;\r\n","import { Box, FormControl, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useSearchResultsStyle from \"../assets/styles/components/searchResultsStyle\";\r\nimport { Movie } from \"../services/types\";\r\nimport SearchResultsCarousel from \"./SearchResultsCarousel\";\r\n\r\nconst SearchResults = ({\r\n  searchedMoviesInfo,\r\n  searchResultDisplay,\r\n  nominationList,\r\n  setNominationList,\r\n  noResult,\r\n}: {\r\n  searchedMoviesInfo: Movie[] | undefined;\r\n  searchResultDisplay: string;\r\n  nominationList: Set<Movie>;\r\n  setNominationList: (\r\n    nominationList: Set<Movie> | ((prevState: Set<Movie>) => Set<Movie>)\r\n  ) => void;\r\n  noResult: boolean;\r\n}) => {\r\n  const classes = useSearchResultsStyle();\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.searchPaper}\r\n      style={{\r\n        height: \"65vh\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            float: \"left\",\r\n          }}\r\n        >\r\n          <Typography className={classes.resultText}>\r\n            Search results for:\r\n          </Typography>\r\n          <Typography className={classes.searchResultText}>\r\n            {searchResultDisplay}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          required\r\n          className={classes.formControl}\r\n        >\r\n          {searchedMoviesInfo && !noResult ? (\r\n            <SearchResultsCarousel\r\n              searchedMoviesInfo={searchedMoviesInfo}\r\n              nominationList={nominationList}\r\n              setNominationList={setNominationList}\r\n            />\r\n          ) : (\r\n            <Typography className={classes.noMatchText}>\r\n              Your search did not match any movies in the database...\r\n            </Typography>\r\n          )}\r\n        </FormControl>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport { Snackbar, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function SnackbarMessage({\r\n  message,\r\n  onClose,\r\n}: {\r\n  message: string;\r\n  onClose: () => void;\r\n}) {\r\n  return (\r\n    <Snackbar\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        textAnchor: \"middle\",\r\n        color: \"primary\",\r\n      }}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      message={message}\r\n      open={Boolean(message.length)}\r\n      action={\r\n        <IconButton\r\n          size=\"small\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      }\r\n      autoHideDuration={3000}\r\n      onClose={onClose}\r\n    ></Snackbar>\r\n  );\r\n}\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\nimport theme from \"../../theme\";\r\n\r\nconst NominationSubmissionStyle = makeStyles(() =>\r\n  createStyles({\r\n    dialogBox: {\r\n      overflowX: \"hidden\",\r\n      overflowY: \"auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.main,\r\n      marginTop: \"2%\",\r\n      fontSize: theme.typography.h1.fontSize,\r\n    },\r\n    media: {\r\n      objectFit: \"contain\",\r\n      width: \"100%\",\r\n      height: \"20vh\",\r\n    },\r\n    rank: {\r\n      width: \"28px\",\r\n      lineHeight: \"24px\",\r\n      borderRadius: \"50%\",\r\n      textAlign: \"center\",\r\n      fontSize: \"12px\",\r\n      border: \"2px solid #666\",\r\n      zIndex: 2,\r\n      backgroundColor: \"red\",\r\n      color: \"white\",\r\n      position: \"absolute\",\r\n    },\r\n    boxStyle: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginBottom: \"2%\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default NominationSubmissionStyle;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 18,\r\n    paddingLeft: 10,\r\n  },\r\n  body: {\r\n    fontSize: 12,\r\n  },\r\n  icon: {\r\n    width: 55,\r\n    height: 55,\r\n    color: \"black\",\r\n  },\r\n  annotationList: {\r\n    maxHeight: \"100%\",\r\n    overflow: \"auto\",\r\n  },\r\n  secondaryText: {\r\n    fontSize: 12,\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  image: {\r\n    height: \"15vh\",\r\n    marginRight: \"5%\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import {\r\n  Box,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Looks3, Looks4, Looks5, LooksOne, LooksTwo } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport useNominatedMovieItemStyle from \"../assets/styles/components/nominatedMovieItemStyle\";\r\n\r\nconst NominatedMovieItem = ({\r\n  nominatedMovie,\r\n  index,\r\n}: {\r\n  nominatedMovie: any;\r\n  index: number;\r\n}) => {\r\n  const classes = useNominatedMovieItemStyle();\r\n\r\n  const getColor = (index: number) => {\r\n    switch (index) {\r\n      case 0:\r\n        return \"#B9F2FF\";\r\n      case 1:\r\n        return \"#E5E4E2\";\r\n      case 2:\r\n        return \"#FFD700\";\r\n      case 3:\r\n        return \"#C0C0C0\";\r\n      case 4:\r\n        return \"#CD7F32\";\r\n    }\r\n  };\r\n\r\n  const Icon = ({ index }: { index: number }) => {\r\n    switch (index) {\r\n      case 0:\r\n        return <LooksOne style={{ fontSize: \"40px\" }} />;\r\n      case 1:\r\n        return <LooksTwo style={{ fontSize: \"40px\" }} />;\r\n      case 2:\r\n        return <Looks3 style={{ fontSize: \"40px\" }} />;\r\n      case 3:\r\n        return <Looks4 style={{ fontSize: \"40px\" }} />;\r\n      default:\r\n        return <Looks5 style={{ fontSize: \"40px\" }} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Slide in direction=\"down\" timeout={800}>\r\n      <ListItem\r\n        key={nominatedMovie.id}\r\n        style={{\r\n          background: getColor(index),\r\n          marginBottom: \"1%\",\r\n          width: \"100vh\",\r\n        }}\r\n      >\r\n        <ListItemAvatar>\r\n          <Icon index={index} />\r\n        </ListItemAvatar>\r\n        <img src={nominatedMovie.poster} className={classes.image} alt=\"\" />\r\n        <ListItemText\r\n          primary={nominatedMovie.title}\r\n          secondary={\r\n            <Box\r\n              style={{\r\n                width: \"100%\",\r\n                lineHeight: \"6px\",\r\n              }}\r\n            >\r\n              <Typography component={\"span\"} className={classes.secondaryText}>\r\n                {\"Year: \" + nominatedMovie.year}\r\n              </Typography>\r\n              <br />\r\n              <Typography component={\"span\"} className={classes.secondaryText}>\r\n                {\"Genre: \" + nominatedMovie.genre}\r\n              </Typography>\r\n              <br />\r\n              <Typography component={\"span\"} className={classes.secondaryText}>\r\n                {\"IMDb Rating: \" + nominatedMovie.rating}\r\n              </Typography>\r\n              <br />\r\n              <Typography component={\"span\"} className={classes.secondaryText}>\r\n                {\"Director: \" + nominatedMovie.director}\r\n              </Typography>\r\n              <br />\r\n              <Typography component={\"span\"} className={classes.secondaryText}>\r\n                {\"Number of Votes: \" + nominatedMovie.count}\r\n              </Typography>\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default React.memo(NominatedMovieItem);\r\n","import { Box, List, Typography } from \"@material-ui/core\";\r\nimport React, { useMemo } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport useNominationRankingsStyle from \"../assets/styles/components/nominationRankingsStyle\";\r\nimport { movieServer } from \"../services\";\r\nimport { SWRKeys } from \"../services/constants\";\r\nimport LoadingAnimation from \"./LoadingAnimation\";\r\nimport NominatedMovieItem from \"./NominatedMovieItem\";\r\n\r\nconst NominationRankings = () => {\r\n  const classes = useNominationRankingsStyle();\r\n\r\n  const {\r\n    data: rankings,\r\n    isValidating: isLoading,\r\n    error,\r\n  } = useSWR(SWRKeys.RANKINGS, () =>\r\n    movieServer.nominationService.getRankings()\r\n  );\r\n\r\n  const topMovies = useMemo(\r\n    () =>\r\n      rankings &&\r\n      rankings.map((nominatedMovie: any, index: number) => (\r\n        <NominatedMovieItem nominatedMovie={nominatedMovie} index={index} />\r\n      )),\r\n    [rankings]\r\n  );\r\n\r\n  return (\r\n    <Box m={1} width={750} height={750} className={classes.dialogBox}>\r\n      <Box\r\n        style={{\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Box className={classes.boxStyle}>\r\n          <Typography className={classes.title}>\r\n            Top 5 Nominated Movies\r\n          </Typography>\r\n        </Box>\r\n        {isLoading ? (\r\n          <LoadingAnimation />\r\n        ) : error ? (\r\n          <Typography>Error loading list...</Typography>\r\n        ) : (\r\n          <List>{topMovies}</List>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NominationRankings;\r\n","import { Box, Button, Dialog, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NominationList from \"../components/NominationList\";\r\nimport NominationSubmission from \"../components/NominationSubmission\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport SearchResults from \"../components/SearchResults\";\r\nimport { Movie } from \"../services/types\";\r\nimport SnackbarMessage from \"../components/Snackbar\";\r\nimport NominationRankings from \"../components/NominationRankings\";\r\n\r\nconst SearchPage = () => {\r\n  const [searchResultDisplay, setSearchResultDisplay] = useState(\"\");\r\n  const [searchedMoviesInfo, setSearchedMoviesInfo] = useState<Movie[]>([]);\r\n  const [nominationList, setNominationList] = useState<Set<Movie>>(new Set());\r\n  const [noResult, setNoResults] = useState(false);\r\n  const [submissionDialogOpen, setSubmissionDialogOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [nominationRankingsOpen, setNominationRankingsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\") {\r\n        setSubmissionDialogOpen(false);\r\n        setNominationRankingsOpen(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"keyup\", handleKeyPress);\r\n    return () => window.removeEventListener(\"keyup\", handleKeyPress);\r\n  }, [submissionDialogOpen, setSubmissionDialogOpen]);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarMessage\r\n        message={snackbarMessage}\r\n        onClose={() => setSnackbarMessage(\"\")}\r\n      />\r\n      <Box\r\n        style={{\r\n          backgroundColor: \"#f4e3c6ff\",\r\n          height: \"100vh\",\r\n          overflowX: \"hidden\",\r\n        }}\r\n      >\r\n        <Dialog\r\n          open={submissionDialogOpen}\r\n          onClose={() => setSubmissionDialogOpen(false)}\r\n        >\r\n          <NominationSubmission\r\n            nominationList={nominationList}\r\n            setSubmissionDialogOpen={setSubmissionDialogOpen}\r\n            setSnackbarMessage={setSnackbarMessage}\r\n          />\r\n        </Dialog>\r\n        <Dialog\r\n          open={nominationRankingsOpen}\r\n          maxWidth=\"xl\"\r\n          onClose={() => setNominationRankingsOpen(false)}\r\n        >\r\n          <NominationRankings />\r\n        </Dialog>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={5} md={9}>\r\n            <div style={{ paddingLeft: \"3%\", paddingTop: \"1%\" }}>\r\n              <img\r\n                src={\"/images/ShoppiesLogo.png\"}\r\n                alt=\"\"\r\n                height=\"auto\"\r\n                style={{ maxWidth: \"100%\", width: \"20%\" }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7} md={2}>\r\n            <Button\r\n              style={{\r\n                marginTop: \"10%\",\r\n                right: \"-15vh\",\r\n                whiteSpace: \"nowrap\",\r\n                border: \"solid\",\r\n                borderWidth: \"thin\",\r\n                borderColor: \"grey\",\r\n              }}\r\n              onClick={() => setNominationRankingsOpen(true)}\r\n            >\r\n              Nomination Rankings\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SearchBar\r\n              setSearchResultDisplay={setSearchResultDisplay}\r\n              searchedMoviesInfo={searchedMoviesInfo}\r\n              setSearchedMoviesInfo={setSearchedMoviesInfo}\r\n              setNoResults={setNoResults}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SearchResults\r\n              searchResultDisplay={searchResultDisplay}\r\n              searchedMoviesInfo={searchedMoviesInfo}\r\n              nominationList={nominationList}\r\n              setNominationList={setNominationList}\r\n              noResult={noResult}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <NominationList\r\n              nominationList={nominationList}\r\n              setNominationList={setNominationList}\r\n              setSubmissionDialogOpen={setSubmissionDialogOpen}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport React, { Suspense, useMemo } from \"react\";\nimport usePageStyles from \"./assets/styles/views/pageStyle\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport theme from \"./assets/theme\";\nimport LoadingAnimation from \"./components/LoadingAnimation\";\nimport SearchPage from \"./views/SearchPage\";\n\nconst App: React.FC = () => {\n  const classes = usePageStyles();\n\n  return useMemo(\n    () => (\n      <div className={classes.mainPanel}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Router>\n            <Suspense fallback={<LoadingAnimation />}>\n              <Switch>\n                <Route exact path=\"/\">\n                  <SearchPage />\n                </Route>\n              </Switch>\n            </Suspense>\n          </Router>\n        </ThemeProvider>\n      </div>\n    ),\n    [classes]\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}